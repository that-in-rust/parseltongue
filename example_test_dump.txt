FILE: src/main.rs
// Example Rust code for end-to-end test
// This will be parsed → ISG → Mermaid diagram

fn main() {
    let user = User::new("Alice".to_string(), 25);
    println!("{}", user.greet());
    let perms = user.get_permissions();
    println!("Permissions: {:?}", perms);
}
================================================
FILE: src/lib.rs
pub struct User {
    name: String,
    age: u32,
}

impl User {
    pub fn new(name: String, age: u32) -> Self {
        Self { name, age }
    }

    pub fn greet(&self) -> String {
        format!("Hello, I'm {} and I'm {} years old", self.name, self.age)
    }
}

pub trait Admin {
    fn get_permissions(&self) -> Vec<String>;
}

impl Admin for User {
    fn get_permissions(&self) -> Vec<String> {
        if self.age >= 18 {
            vec!["read".to_string(), "write".to_string()]
        } else {
            vec!["read".to_string()]
        }
    }
}